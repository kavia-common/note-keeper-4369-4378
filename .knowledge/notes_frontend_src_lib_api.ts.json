{"is_source_file": true, "format": "TypeScript", "description": "A TypeScript module implementing a REST API client for notes management, including functions for listing, retrieving, creating, updating, deleting notes, and clipboard interactions.", "external_files": ["fetch API", "process.env.NEXT_PUBLIC_BACKEND_URL"], "external_methods": ["fetch", "Promise", "encodeURIComponent", "JSON.stringify", "headers.get"], "published": ["Note", "listNotes", "getNote", "createNote", "updateNote", "deleteNote", "safeWriteClipboardText"], "classes": [], "methods": [{"name": "function url(path: string): string { url", "description": "Constructs a full URL to the backend by combining the base URL with a path, ensuring no duplicate slashes.", "scope": "", "scopeKind": ""}, {"name": "async function jsonFetch<T>( jsonFetch", "description": "A wrapper around fetch to perform JSON requests with error handling, supporting optional abort signals.", "scope": "", "scopeKind": ""}, {"name": "export async function listNotes(signal?: AbortSignal): Promise<Note[]> { listNotes", "description": "Fetches all notes from the backend API.", "scope": "", "scopeKind": ""}, {"name": "export async function getNote(id: string, signal?: AbortSignal): Promise<Note> { getNote", "description": "Fetches a specific note by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(payload: { createNote", "description": "Creates a new note with provided title and content.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote( updateNote", "description": "Updates an existing note identified by ID with new title and content.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: string): Promise<{ success: boolean }> { deleteNote", "description": "Deletes a note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function safeWriteClipboardText(text: string): Promise<boolean> { safeWriteClipboardText", "description": "Attempts to write text to the clipboard with permission checks, returning success status.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "res.headers.get", "res.json", "res.text", "jsonFetch", "url", "encodeURIComponent"], "search-terms": ["API client", "TypeScript notes", "backend URL", "CRUD helpers", "clipboard utility", "notes API", "REST fetch wrapper", "notes frontend"], "state": 2, "file_id": 25, "knowledge_revision": 62, "git_revision": "", "revision_history": [{"60": ""}, {"61": ""}, {"62": ""}], "ctags": [{"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^const BASE_URL =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^  const base = BASE_URL?.replace(\\/\\\\\\/+$\\/, \"\") || \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "url", "scopeKind": "function"}, {"_type": "tag", "name": "contentType", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^  const contentType = res.headers.get(\"content-type\");$/", "language": "TypeScript", "kind": "constant", "scope": "jsonFetch", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^export async function createNote(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^export async function deleteNote(id: string): Promise<{ success: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^export async function getNote(id: string, signal?: AbortSignal): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "jsonFetch", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^async function jsonFetch<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^export async function listNotes(signal?: AbortSignal): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^    const message =$/", "language": "TypeScript", "kind": "constant", "scope": "jsonFetch", "scopeKind": "function"}, {"_type": "tag", "name": "nav", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^    const nav: Navigator & {$/", "language": "TypeScript", "kind": "constant", "scope": "safeWriteClipboardText", "scopeKind": "function"}, {"_type": "tag", "name": "p", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^  const p = path.replace(\\/^\\\\\\/+\\/, \"\");$/", "language": "TypeScript", "kind": "constant", "scope": "url", "scopeKind": "function"}, {"_type": "tag", "name": "permissions", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^      permissions?: {$/", "language": "TypeScript", "kind": "constant", "scope": "safeWriteClipboardText", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(input, {$/", "language": "TypeScript", "kind": "constant", "scope": "jsonFetch", "scopeKind": "function"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^        const result = await nav.permissions.query({ name: \"clipboard-write\" });$/", "language": "TypeScript", "kind": "constant", "scope": "safeWriteClipboardText", "scopeKind": "function"}, {"_type": "tag", "name": "safeWriteClipboardText", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^export async function safeWriteClipboardText(text: string): Promise<boolean> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^export async function updateNote($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-4369-4378/notes_frontend/src/lib/api.ts", "pattern": "/^function url(path: string): string {$/", "language": "TypeScript", "kind": "function"}], "hash": "e3f482db34ce6451e845535d38d30cea", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/api.ts"}